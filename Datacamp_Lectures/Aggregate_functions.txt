

----------------------------------------------SUM, AVG, MAX and MIN -----------------------------------------------------------
SELECT SUM(duration)
from films

SELECT AVG(duration)
from films

SELECT MIN(duration)
from films

SELECT MAX(duration)
from films

SELECT SUM(gross)
FROM films

SELECT AVG(gross)
FROM films

SELECT MIN(gross)
FROM films

SELECT MAX(gross)
FROM films

-----------------------------------------Aggregate Function with Filtering-----------------------------------------------------
SELECT SUM(gross)
FROM films
WHERE release_year >= 2000

SELECT AVG (gross)
FROM films
WHERE title LIKE 'A%'

SELECT MIN (gross)
FROM films
WHERE release_year = 1994

SELECT MAX (gross)
FROM films
WHERE release_year BETWEEN 2000 AND 2012

----------------------------------------------------ALIASING ----------------------------------------------------------------
What if you use two functions like this?

SELECT MAX(budget), MAX(duration)
FROM films;

Well, then you'd have two columns named max in the result, which isn't very useful!


SELECT title AS title,
       (gross-budget) AS net_profit
FROM films


SELECT title, (duration/60.0) as duration_hours
FROM films;

SELECT AVG(duration/60.0) AS avg_duration_hours
FROM films;


-- get the count(deathdate) and multiply by 100.0
-- then divide by count(*) 

SELECT COUNT(deathdate) * 100.0 / COUNT(*) AS percentage_dead
FROM people;


SELECT (MAX(release_year) - MIN(release_year)) AS difference
FROM films;

SELECT (MAX(release_year) - MIN(release_year))/10 AS number_of_decades
FROM films;















